/* -*- Mode: Prolog -*- */

:- include(ordinal_series).

somite_number *--> in_ordinal_series(1-39).

:- if(in_context('Homo sapiens')).

somite_number *--> in_ordinal_series(1-39).

:- endif.
:- if(in_context('Mus')).

somite_number *--> in_ordinal_series(1-65).

:- endif.
:- if(in_context('chick')).

somite_number *--> in_ordinal_series(1-50).

:- endif.
:- if(in_context('snake')).

somite_number *--> in_ordinal_series(1-500).

:- endif.
:- if(in_context('test')).

somite_number *--> in_ordinal_series(1-3).  % REDUCE FOR TESTING

:- endif.



somitic_element *--> somite.
somitic_element *--> sclerotome.
somitic_element *--> myotome.
somitic_element *--> dermatome.
somitic_element *--> dermomyotome.

somite *--> @somite,somite_number.
sclerotome *--> @sclerotome,somite_number.
dermatome *--> @dermatome,somite_number.
myotome *--> @myotome,somite_number.
dermomyotome *--> @dermomyotome,somite_number.

about *-->
        somitic_element(S1),
        {S1 =::= ( (@T1) and X),
         develops_from(T1,T2)},
        [develops,from],
        somitic_element(S2),
        {S2 =::= ( (@T2) and X)}
        ::
        S1 < develops_from some S2.

about *-->
        somitic_element(S1),
        {S1 =::= ( (@T) and has_order value literal(type(_,N))),
         N_prev is N-1},
        [posterior_to],
        somitic_element(S2),
        {S2 =::= ( (@T) and has_order value literal(type(_,N_prev)))}
        ::
        S1 < posterior_to some S2.

% from EHDAA2
develops_from(dermatome,dermomyotome).
develops_from(myotome,dermomyotome).
develops_from(dermomyotome,somite).
develops_from(sclerotome,somite).

/*

  query on EHDAA2:
  
ehdaa2 -query "member(Z,['EHDAA2:0001848','EHDAA2:0000737']),parent(X,part_of,Z),class(X,N),sub_atom(N,_,_,_,'somite 0'),parent(Y,develops_from,X),(parent(ID,develops_from,Y);ID=Y)"  
  
  */
